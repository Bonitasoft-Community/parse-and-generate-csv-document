
(function(){try{return angular.module('bonitasoft.ui.widgets');}catch(e){return angular.module('bonitasoft.ui.widgets',[]);}})().directive('pbTitle',function(){return{template:'<h1 ng-if="\'Level 1\' === properties.level" class="text-{{ properties.alignment }}">{{properties.text | uiTranslate}}</h1>\n<h2 ng-if="\'Level 2\' === properties.level" class="text-{{ properties.alignment }}">{{properties.text | uiTranslate}}</h2>\n<h3 ng-if="\'Level 3\' === properties.level" class="text-{{ properties.alignment }}">{{properties.text | uiTranslate}}</h3>\n<h4 ng-if="\'Level 4\' === properties.level" class="text-{{ properties.alignment }}">{{properties.text | uiTranslate}}</h4>\n<h5 ng-if="\'Level 5\' === properties.level" class="text-{{ properties.alignment }}">{{properties.text | uiTranslate}}</h5>\n<h6 ng-if="\'Level 6\' === properties.level" class="text-{{ properties.alignment }}">{{properties.text | uiTranslate}}</h6>\n'};});(function(){try{return angular.module('bonitasoft.ui.widgets');}catch(e){return angular.module('bonitasoft.ui.widgets',[]);}})().directive('pbText',function(){return{template:'<p ng-if="properties.allowHTML" class="text-{{ properties.alignment }}" ng-bind-html="properties.text | uiTranslate"></p>\n<p ng-if="!properties.allowHTML" class="text-{{ properties.alignment }}" ng-bind="properties.text | uiTranslate"></p>\n'};});(function(){try{return angular.module('bonitasoft.ui.widgets');}catch(e){return angular.module('bonitasoft.ui.widgets',[]);}})().directive('pbSelect',function(){return{controllerAs:'ctrl',controller:function PbSelectCtrl($scope,$parse,$log,widgetNameFactory,$timeout,$window,$element){var ctrl=this;function comparator(initialValue,item){return angular.equals(initialValue,ctrl.getValue(item));}
function createGetter(accessor){return accessor&&$parse(accessor);}
this.getLabel=createGetter($scope.properties.displayedKey)||function(item){return typeof item==='string'?item:JSON.stringify(item);};this.getValue=createGetter($scope.properties.returnedKey)||function(item){return item;};this.findSelectedItem=function(items){return items.filter(comparator.bind(null,$scope.properties.value)).map(function(item){return ctrl.getValue(item);})[0];};this.setSelectedValue=function(foundItem){$timeout(function(){$scope.properties.value=angular.isDefined(foundItem)?foundItem:null;},0);};$scope.$watchCollection('properties.availableValues',function(items){if(Array.isArray(items)){var foundItem=ctrl.findSelectedItem(items);if($window.navigator&&$window.navigator.userAgent&&$window.navigator.userAgent.indexOf('MSIE 9')>=0){var option=document.createElement('option');var select=$element.find('select')[0];select.add(option,null);select.remove(select.options.length-1);}
$scope.properties.value=undefined;ctrl.setSelectedValue(foundItem);}});$scope.$watch('properties.value',function(value){if(angular.isDefined(value)&&value!==null){var items=$scope.properties.availableValues;if(Array.isArray(items)){var foundItem=ctrl.findSelectedItem(items);ctrl.setSelectedValue(foundItem);}}});this.name=widgetNameFactory.getName('pbSelect');if(!$scope.properties.isBound('value')){$log.error('the pbSelect property named "value" need to be bound to a variable');}},template:'<div ng-class="{\n    \'form-horizontal\': properties.labelPosition === \'left\' && !properties.labelHidden,\n    \'row\': properties.labelPosition === \'top\' && !properties.labelHidden || properties.labelHidden\n    }">\n    <div class="form-group">\n        <label\n            ng-if="!properties.labelHidden"\n            ng-class="{ \'control-label--required\': properties.required }"\n            class="control-label col-xs-{{ !properties.labelHidden && properties.labelPosition === \'left\' ? properties.labelWidth : 12 }}">\n            {{ properties.label | uiTranslate }}\n        </label>\n        <div class="col-xs-{{ 12 - (!properties.labelHidden && properties.labelPosition === \'left\' ? properties.labelWidth : 0) }}" >\n            <select\n                class="form-control"\n                name="{{ctrl.name}}"\n                ng-model="properties.value"\n                ng-model-options="{ allowInvalid: true }"\n                ng-options="ctrl.getValue(option) as (ctrl.getLabel(option) | uiTranslate) for option in properties.availableValues"\n                ng-required="properties.required"\n                ng-disabled="properties.disabled">\n                <option style="display:none" value="">\n                    {{ properties.placeholder | uiTranslate }}\n                </option>\n            </select>\n            <div ng-messages="$form[ctrl.name].$dirty && $form[ctrl.name].$error " ng-messages-include="forms-generic-errors.html" role="alert"></div>\n        </div>\n    </div>\n</div>\n'};});(function(){try{return angular.module('bonitasoft.ui.widgets');}catch(e){return angular.module('bonitasoft.ui.widgets',[]);}})().directive('pbLink',function(){return{controllerAs:'ctrl',controller:function PbLinkCtrl($scope,$location,$window,httpParamSerializer){'use strict';this.getHref=function(){var appToken=getAppToken('app');if($scope.properties.type==='page'){return getPortalUrl()+'/apps/'+(appToken||'APP_TOKEN_PLACEHOLDER')+'/'+$scope.properties.pageToken+buildQueryString();}else if($scope.properties.type==='process'){return getPortalUrl()+'/portal/form/process/'+$scope.properties.processName+'/'+$scope.properties.processVersion+buildQueryString(appToken?{app:appToken}:null);}else if($scope.properties.type==='task'){return getPortalUrl()+'/portal/form/taskInstance/'+$scope.properties.taskId+buildQueryString(appToken?{app:appToken}:null);}else if($scope.properties.type==='overview'){return getPortalUrl()+'/portal/form/processInstance/'+$scope.properties.caseId+buildQueryString(appToken?{app:appToken}:null);}else{return $scope.properties.targetUrl;}};this.getTarget=function(){if($scope.properties.type==='page'){return'_top';}
return $scope.properties.target;};function buildQueryString(additionalParams){var params=angular.extend({},$scope.properties.urlParams||{},additionalParams||{});var queryString=httpParamSerializer.paramSerializer(params);return queryString?'?'+queryString:'';}
function getAppToken(paramName){if($scope.properties.appToken){return $scope.properties.appToken;}
var appTokenParam=getUrlParam(paramName);if(appTokenParam){return appTokenParam;}
var urlMatches=$window.top.location.href.match('\/apps\/([^/]*)\/');if(urlMatches){return urlMatches[1];}
return null;}
function getUrlParam(paramName){var paramValue=$location.absUrl().match('[\/?&]'+paramName+'=([^&#]*)($|[&#])');if(paramValue){return paramValue[1];}
return'';}
function getPortalUrl(){var locationHref=$location.absUrl();var indexOfPortal=locationHref.indexOf('/portal');if(indexOfPortal>=0){return locationHref.substring(0,indexOfPortal);}else{return'/bonita';}}},template:'<div class="text-{{ properties.alignment }}">\n  <a ng-class="properties.buttonStyle !== \'none\' ? \'btn btn-\' + properties.buttonStyle : \'\'" ng-href="{{ctrl.getHref()}}" target="{{ctrl.getTarget()}}" ng-bind-html="properties.text | uiTranslate"></a>\n</div>\n'};});(function(){try{return angular.module('bonitasoft.ui.widgets');}catch(e){return angular.module('bonitasoft.ui.widgets',[]);}})().directive('pbTable',function(){return{controllerAs:'ctrl',controller:function PbTableCtrl($scope){this.isArray=Array.isArray;this.isClickable=function(){return $scope.properties.isBound('selectedRow');};this.selectRow=function(row){if(this.isClickable()){$scope.properties.selectedRow=row;}};this.isSelected=function(row){return angular.equals(row,$scope.properties.selectedRow);}},template:'<div class="table-responsive">\n    <table class="table table-striped" ng-class="{\'table-hover\': ctrl.isClickable()}">\n        <thead>\n            <tr>\n                <th ng-repeat="header in properties.headers">\n                    {{ header | uiTranslate }}\n                </th>\n            </tr>\n        </thead>\n        <tbody ng-if="ctrl.isArray(properties.content) && ctrl.isArray(properties.columnsKey)">\n            <tr ng-repeat="row in properties.content" ng-click="ctrl.selectRow(row)" ng-class="{\'info\': ctrl.isSelected(row)}">\n                <td ng-repeat="column in properties.columnsKey track by $index">\n                    {{ $eval(column, row) | uiTranslate }}\n                </td>\n            </tr>\n        </tbody>\n        <tbody ng-if="ctrl.isArray(properties.content) && !ctrl.isArray(properties.columnsKey)">\n            <tr ng-repeat="row in properties.content" ng-click="ctrl.selectRow(row)" ng-class="{\'info\': ctrl.isSelected(row)}">\n                <td> {{ row | uiTranslate }} </td>\n            </tr>\n        </tbody>\n    </table>\n</div>\n'};});(function(){try{return angular.module('bonitasoft.ui.widgets');}catch(e){return angular.module('bonitasoft.ui.widgets',[]);}})().directive('timelineWidget',function(){return{controllerAs:'ctrl',controller:function($scope){$scope.formatDate=function(mydate){return new Date(mydate.replace(/^(.*-[0-9][0-9])(\ )([0-9][0-9]\:.*$)/,'$1T$3')).getTime();}
$scope.buildEventTitle=function(event){return $scope.$eval($scope.properties.eventsTitleExpression,{"event":event});};$scope.buildEventTime=function(event){return $scope.$eval($scope.properties.eventsTimeExpression,{"event":event});};$scope.buildEventAuthor=function(event){return $scope.$eval($scope.properties.eventsAuthorExpression,{"event":event});};$scope.buildEventContent=function(event){return $scope.$eval($scope.properties.eventsContentExpression,{"event":event});};$scope.buildEventIcon=function(event){return $scope.$eval($scope.properties.eventsIconExpression,{"event":event});};$scope.buildEventStyle=function(event){return $scope.$eval($scope.properties.eventsIconStyleExpression,{"event":event});};$scope.buildOriginTitle=function(){return $scope.$eval($scope.properties.originTitleExpression,{"origin":$scope.properties.origin});};$scope.buildOriginTime=function(){return $scope.$eval($scope.properties.originTimeExpression,{"origin":$scope.properties.origin});};$scope.buildOriginAuthor=function(){return $scope.$eval($scope.properties.originAuthorExpression,{"origin":$scope.properties.origin});};$scope.buildOriginContent=function(){return $scope.$eval($scope.properties.originContentExpression,{"origin":$scope.properties.origin});};},template:'<!-- The custom widget template is defined here\n   - You can use standard HTML tags and AngularJS built-in directives, scope and interpolation system\n   - Custom widget properties defined on the right can be used as variables in a templates with properties.newProperty\n   - Functions exposed in the controller can be used with ctrl.newFunction()\n - You can use the environment property injected in the scope when inside the whiteboard editor. It allows to create a mockup display for the whiteboard as the real use data will not be available.\n-->\n\n<span ng-if="environment"><identicon name="{{environment.component.id}}" size="30" background-color="[255,255,255, 0]" foreground-color="[51,51,51]"></identicon> {{environment.component.name}}</span>\n\n<timeline>\n    <timeline-node  ng-repeat="event in properties.events" side="{{$even ?\'left\':\'right\'}}">\n        <timeline-badge class="{{buildEventStyle(event)}}"> <i class="glyphicon glyphicon-{{buildEventIcon(event)}}"></i>\n        </timeline-badge>\n        <timeline-panel>\n            <timeline-heading>\n                <timeline-title>\n                    {{buildEventTitle(event)}}\n                </timeline-title>\n                <p>\n                    <small class="text-muted"> <i class="glyphicon glyphicon-time"></i>\n                          {{formatDate(buildEventTime(event)) | date:properties.eventsTimeAttributeFormat}}\n                    </small>\n                    <br/>\n                    <small class="text-muted" ng-if="buildEventAuthor(event)"> <i class="glyphicon glyphicon-user"></i>\n                        {{buildEventAuthor(event)}}\n                    </small>\n                </p>\n            </timeline-heading>\n            <timeline-content>\n                <p>{{buildEventContent(event)}}</p>\n            </timeline-content>\n        </timeline-panel>\n    </timeline-node>\n    <timeline-node ng-if="properties.events[0]===undefined">\n        <timeline-badge class="warning"> <i class="glyphicon glyphicon-asterisk"></i>\n        </timeline-badge>\n        <timeline-panel>\n            <timeline-heading>\n                <timeline-title>\n                    <span translate>{{properties.noEventsTitle}}</span>\n                </timeline-title>\n            </timeline-heading>\n            <timeline-content>\n                <p translate>{{properties.noEventsContent}}</p>\n            </timeline-content>\n        </timeline-panel>\n    </timeline-node>\n</timeline>\n<timeline-footer>\n    <timeline-panel>\n        <timeline-heading>\n            <timeline-title>\n                <span translate>{{buildOriginTitle()}}</span>\n            </timeline-title>\n            <p>\n                <small class="text-muted"> <i class="glyphicon glyphicon-time"></i>\n                    {{formatDate(buildOriginTime()) | date:properties.eventsTimeAttributeFormat}}\n                </small>\n                 <br/>\n                <small class="text-muted"> <i class="glyphicon glyphicon-user"></i>\n                    {{buildOriginAuthor()}}\n                </small>\n            </p>\n        </timeline-heading>\n        <timeline-content>\n            <p>{{buildOriginContent()}}</p>\n        </timeline-content>\n    </timeline-panel>\n</timeline-footer>\n'};});